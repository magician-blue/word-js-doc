{
  "class": {
    "name": "ShadingUniversal",
    "package": "word",
    "extends": [
      "OfficeExtension.ClientObject"
    ],
    "api_set": {
      "name": "WordApi",
      "status": "BETA (PREVIEW ONLY)"
    },
    "description": "Represents the ShadingUniversal object, which manages shading for a range, paragraph, frame, or table.",
    "examples": []
  },
  "properties": [
    {
      "name": "backgroundPatternColor",
      "type": "string",
      "description": "Specifies the color that's applied to the background of the ShadingUniversal object. You can provide the value in the '#RRGGBB' format.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": [
        {
          "description": "Set the background pattern color of the first paragraph to light blue (#ADD8E6)",
          "usage_code": "await Word.run(async (context) => {\n    const firstParagraph = context.document.body.paragraphs.getFirst();\n    firstParagraph.shading.backgroundPatternColor = \"#ADD8E6\";\n    \n    await context.sync();\n});",
          "output_code": null
        }
      ]
    },
    {
      "name": "backgroundPatternColorIndex",
      "type": "Word.ColorIndex | \"Auto\" | \"Black\" | \"Blue\" | \"Turquoise\" | \"BrightGreen\" | \"Pink\" | \"Red\" | \"Yellow\" | \"White\" | \"DarkBlue\" | \"Teal\" | \"Green\" | \"Violet\" | \"DarkRed\" | \"DarkYellow\" | \"Gray50\" | \"Gray25\" | \"ClassicRed\" | \"ClassicBlue\" | \"ByAuthor\"",
      "description": "Specifies the color that's applied to the background of the ShadingUniversal object.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": [
        {
          "description": "Set the background pattern color of the first paragraph to bright green using the color index",
          "usage_code": "await Word.run(async (context) => {\n    const firstParagraph = context.document.body.paragraphs.getFirst();\n    firstParagraph.shading.backgroundPatternColorIndex = \"BrightGreen\";\n    \n    await context.sync();\n});",
          "output_code": null
        }
      ]
    },
    {
      "name": "context",
      "type": "RequestContext",
      "description": "The request context associated with the object. This connects the add-in's process to the Office host application's process.",
      "since": null,
      "examples": [
        {
          "description": "Access the request context from a ShadingUniversal object to synchronize changes with the Office host application",
          "usage_code": "await Word.run(async (context) => {\n    // Get the first paragraph in the document\n    const paragraph = context.document.body.paragraphs.getFirst();\n    \n    // Get the shading object for the paragraph\n    const shading = paragraph.shading;\n    \n    // Access the request context from the shading object\n    const shadingContext = shading.context;\n    \n    // Use the context to load properties and sync\n    shading.load(\"backgroundPatternColor\");\n    await shadingContext.sync();\n    \n    console.log(\"Shading background color: \" + shading.backgroundPatternColor);\n});",
          "output_code": null
        }
      ]
    },
    {
      "name": "foregroundPatternColor",
      "type": "string",
      "description": "Specifies the color that's applied to the foreground of the ShadingUniversal object. This color is applied to the dots and lines in the shading pattern. You can provide the value in the '#RRGGBB' format.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": [
        {
          "description": "Set the foreground pattern color of paragraph shading to red",
          "usage_code": "await Word.run(async (context) => {\n    const paragraph = context.document.body.paragraphs.getFirst();\n    paragraph.shading.foregroundPatternColor = \"#FF0000\";\n    \n    await context.sync();\n});",
          "output_code": null
        }
      ]
    },
    {
      "name": "foregroundPatternColorIndex",
      "type": "Word.ColorIndex | \"Auto\" | \"Black\" | \"Blue\" | \"Turquoise\" | \"BrightGreen\" | \"Pink\" | \"Red\" | \"Yellow\" | \"White\" | \"DarkBlue\" | \"Teal\" | \"Green\" | \"Violet\" | \"DarkRed\" | \"DarkYellow\" | \"Gray50\" | \"Gray25\" | \"ClassicRed\" | \"ClassicBlue\" | \"ByAuthor\"",
      "description": "Specifies the color that's applied to the foreground of the ShadingUniversal object. This color is applied to the dots and lines in the shading pattern.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": [
        {
          "description": "Set the foreground pattern color of paragraph shading to red",
          "usage_code": "await Word.run(async (context) => {\n    const paragraph = context.document.body.paragraphs.getFirst();\n    paragraph.shading.foregroundPatternColorIndex = \"Red\";\n    \n    await context.sync();\n});",
          "output_code": null
        }
      ]
    },
    {
      "name": "texture",
      "type": "Word.ShadingTextureType | \"DarkDiagonalDown\" | \"DarkDiagonalUp\" | \"DarkGrid\" | \"DarkHorizontal\" | \"DarkTrellis\" | \"DarkVertical\" | \"LightDiagonalDown\" | \"LightDiagonalUp\" | \"LightGrid\" | \"LightHorizontal\" | \"LightTrellis\" | \"LightVertical\" | \"None\" | \"Percent10\" | \"Percent12Pt5\" | \"Percent15\" | \"Percent20\" | \"Percent25\" | \"Percent30\" | \"Percent35\" | \"Percent37Pt5\" | \"Percent40\" | \"Percent45\" | \"Percent5\" | \"Percent50\" | \"Percent55\" | \"Percent60\" | \"Percent62Pt5\" | \"Percent65\" | \"Percent70\" | \"Percent75\" | \"Percent80\" | \"Percent85\" | \"Percent87Pt5\" | \"Percent90\" | \"Percent95\" | \"Solid\"",
      "description": "Specifies the shading texture of the object. To learn more about how to apply backgrounds like textures, see [Add, change, or delete the background color in Word](https://support.microsoft.com/office/db481e61-7af6-4063-bbcd-b276054a5515).",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": [
        {
          "description": "Apply a light diagonal down texture pattern to the shading of the first paragraph in the document",
          "usage_code": "await Word.run(async (context) => {\n    const firstParagraph = context.document.body.paragraphs.getFirst();\n    const shading = firstParagraph.shadingOrNullObject;\n    \n    shading.texture = \"LightDiagonalDown\";\n    \n    await context.sync();\n});",
          "output_code": null
        }
      ]
    }
  ],
  "methods": [
    {
      "name": "load",
      "kind": "load",
      "description": "Queues up a command to load the specified properties of the object. You must call context.sync() before reading the properties.",
      "signatures": [
        {
          "params": [
            {
              "name": "options",
              "type": "Word.Interfaces.ShadingUniversalLoadOptions",
              "required": false,
              "description": "Provides options for which properties of the object to load."
            }
          ],
          "returns": {
            "type": "Word.ShadingUniversal",
            "description": null
          }
        },
        {
          "params": [
            {
              "name": "propertyNames",
              "type": "string | string[]",
              "required": false,
              "description": "A comma-delimited string or an array of strings that specify the properties to load."
            }
          ],
          "returns": {
            "type": "Word.ShadingUniversal",
            "description": null
          }
        },
        {
          "params": [
            {
              "name": "propertyNamesAndPaths",
              "type": "{ select?: string; expand?: string; }",
              "required": false,
              "description": "propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load."
            }
          ],
          "returns": {
            "type": "Word.ShadingUniversal",
            "description": null
          }
        }
      ],
      "examples": [
        {
          "description": "Load and display the background color of the first paragraph's shading",
          "usage_code": "await Word.run(async (context) => {\n    // Get the first paragraph\n    const paragraph = context.document.body.paragraphs.getFirst();\n    const shading = paragraph.shadingUniversal;\n    \n    // Load the background color property\n    shading.load(\"backgroundPatternColor\");\n    \n    // Sync to execute the load command\n    await context.sync();\n    \n    // Display the loaded property\n    console.log(\"Background color: \" + shading.backgroundPatternColor);\n});",
          "output_code": null
        }
      ]
    },
    {
      "name": "set",
      "kind": "write",
      "description": "Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.",
      "signatures": [
        {
          "params": [
            {
              "name": "properties",
              "type": "Interfaces.ShadingUniversalUpdateData",
              "required": true,
              "description": "A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called."
            },
            {
              "name": "options",
              "type": "OfficeExtension.UpdateOptions",
              "required": false,
              "description": "Provides an option to suppress errors if the properties object tries to set any read-only properties."
            }
          ],
          "returns": {
            "type": "void",
            "description": null
          }
        },
        {
          "params": [
            {
              "name": "properties",
              "type": "Word.ShadingUniversal",
              "required": true,
              "description": null
            }
          ],
          "returns": {
            "type": "void",
            "description": null
          }
        }
      ],
      "examples": [
        {
          "description": "Apply yellow background shading with 25% texture pattern to the first paragraph in the document",
          "usage_code": "await Word.run(async (context) => {\n    const firstParagraph = context.document.body.paragraphs.getFirst();\n    const shading = firstParagraph.shadingOrNullObject;\n    \n    shading.set({\n        backgroundPatternColor: \"yellow\",\n        texture: Word.ShadingTextureType.percent25\n    });\n    \n    await context.sync();\n});",
          "output_code": null
        }
      ]
    },
    {
      "name": "toJSON",
      "kind": "serialize",
      "description": "Overrides the JavaScript toJSON() method in order to provide more useful output when an API object is passed to JSON.stringify(). (JSON.stringify, in turn, calls the toJSON method of the object that's passed to it.) Whereas the original Word.ShadingUniversal object is an API object, the toJSON method returns a plain JavaScript object (typed as Word.Interfaces.ShadingUniversalData) that contains shallow copies of any loaded child properties from the original object.",
      "signatures": [
        {
          "params": [],
          "returns": {
            "type": "Word.Interfaces.ShadingUniversalData",
            "description": null
          }
        }
      ],
      "examples": [
        {
          "description": "Get the shading properties of the first paragraph as a plain JavaScript object and log it to the console",
          "usage_code": "await Word.run(async (context) => {\n    // Get the first paragraph in the document\n    const paragraph = context.document.body.paragraphs.getFirst();\n    const shading = paragraph.shading;\n    \n    // Load the shading properties\n    shading.load(\"backgroundPatternColor\");\n    \n    await context.sync();\n    \n    // Convert the shading object to a plain JavaScript object\n    const shadingData = shading.toJSON();\n    \n    // Log the plain object (useful for debugging or serialization)\n    console.log(\"Shading properties:\", shadingData);\n    console.log(\"Background color:\", shadingData.backgroundPatternColor);\n});",
          "output_code": null
        }
      ]
    },
    {
      "name": "track",
      "kind": "track",
      "description": "Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for [context.trackedObjects.add(thisObject)](/en-us/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member). If you're using this object across .sync calls and outside the sequential execution of a \".run\" batch, and get an \"InvalidObjectPath\" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.",
      "signatures": [
        {
          "params": [],
          "returns": {
            "type": "Word.ShadingUniversal",
            "description": null
          }
        }
      ],
      "examples": [
        {
          "description": "Apply background color shading to a paragraph and track the shading object to maintain reference across multiple sync calls for later modification.",
          "usage_code": "await Word.run(async (context) => {\n    // Get the first paragraph\n    const paragraph = context.document.body.paragraphs.getFirst();\n    const shading = paragraph.shading;\n    \n    // Track the shading object for use across sync calls\n    shading.track();\n    \n    // Load and sync to get current properties\n    shading.load(\"backgroundPatternColor\");\n    await context.sync();\n    \n    // Set initial background color\n    shading.backgroundPatternColor = \"yellow\";\n    await context.sync();\n    \n    // Later in the same run, modify the shading again\n    // The tracked object remains valid across sync calls\n    shading.backgroundPatternColor = \"lightblue\";\n    await context.sync();\n    \n    // Untrack when done to free up memory\n    shading.untrack();\n});",
          "output_code": null
        }
      ]
    },
    {
      "name": "untrack",
      "kind": "untrack",
      "description": "Release the memory associated with this object, if it has previously been tracked. This call is shorthand for [context.trackedObjects.remove(thisObject)](/en-us/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member). Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call context.sync() before the memory release takes effect.",
      "signatures": [
        {
          "params": [],
          "returns": {
            "type": "Word.ShadingUniversal",
            "description": null
          }
        }
      ],
      "examples": [
        {
          "description": "Apply shading to a paragraph, then untrack the shading object to free memory after the operation is complete.",
          "usage_code": "await Word.run(async (context) => {\n    // Get the first paragraph\n    const paragraph = context.document.body.paragraphs.getFirst();\n    \n    // Get the shading object and track it\n    const shading = paragraph.shading;\n    shading.track();\n    \n    // Apply shading properties\n    shading.backgroundPatternColor = \"#FFFF00\"; // Yellow background\n    \n    // Sync to apply changes\n    await context.sync();\n    \n    // Untrack the shading object to release memory\n    shading.untrack();\n    \n    await context.sync();\n});",
          "output_code": null
        }
      ]
    }
  ],
  "source": {
    "urls": [
      "/en-us/javascript/api/word/word.shadinguniversal"
    ]
  }
}