{
  "class": {
    "name": "Word.ListCollection",
    "package": "word",
    "extends": [
      "OfficeExtension.ClientObject"
    ],
    "api_set": {
      "name": "WordApi",
      "status": "1.3"
    },
    "description": "Contains a collection of [Word.List](/en-us/javascript/api/word/word.list) objects.",
    "examples": [
      {
        "description": null,
        "usage_code": "// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/20-lists/organize-list.yaml\n\n// Gets information about the first list in the document.\nawait Word.run(async (context) => {\n  const lists: Word.ListCollection = context.document.body.lists;\n  lists.load(\"items\");\n\n  await context.sync();\n\n  if (lists.items.length === 0) {\n    console.warn(\"There are no lists in this document.\");\n    return;\n  }\n  \n  // Get the first list.\n  const list: Word.List = lists.getFirst();\n  list.load(\"levelTypes,levelExistences\");\n\n  await context.sync();\n\n  const levelTypes  = list.levelTypes;\n  console.log(\"Level types of the first list:\");\n  for (let i = 0; i < levelTypes.length; i++) {\n    console.log(`- Level ${i + 1} (index ${i}): ${levelTypes[i]}`);\n  }\n\n  const levelExistences = list.levelExistences;\n  console.log(\"Level existences of the first list:\");\n  for (let i = 0; i < levelExistences.length; i++) {\n    console.log(`- Level ${i + 1} (index ${i}): ${levelExistences[i]}`);\n  }\n});",
        "output_code": null
      }
    ]
  },
  "properties": [
    {
      "name": "context",
      "type": "RequestContext",
      "description": "The request context associated with the object. This connects the add-in's process to the Office host application's process.",
      "since": null,
      "examples": []
    },
    {
      "name": "items",
      "type": "Word.List[]",
      "description": "Gets the loaded child items in this collection.",
      "since": null,
      "examples": []
    }
  ],
  "methods": [
    {
      "name": "getById",
      "kind": "read",
      "description": "Gets a list by its identifier. Throws an `ItemNotFound` error if there isn't a list with the identifier in this collection.",
      "signatures": [
        {
          "params": [
            {
              "name": "id",
              "type": "number",
              "required": true,
              "description": "A list identifier."
            }
          ],
          "returns": {
            "type": "Word.List",
            "description": null
          }
        }
      ],
      "examples": []
    },
    {
      "name": "getByIdOrNullObject",
      "kind": "read",
      "description": "Gets a list by its identifier. If there isn't a list with the identifier in this collection, then this method will return an object with its `isNullObject` property set to `true`. For further information, see [*OrNullObject methods and properties](/en-us/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties).",
      "signatures": [
        {
          "params": [
            {
              "name": "id",
              "type": "number",
              "required": true,
              "description": "A list identifier."
            }
          ],
          "returns": {
            "type": "Word.List",
            "description": null
          }
        }
      ],
      "examples": []
    },
    {
      "name": "getFirst",
      "kind": "read",
      "description": "Gets the first list in this collection. Throws an `ItemNotFound` error if this collection is empty.",
      "signatures": [
        {
          "params": [],
          "returns": {
            "type": "Word.List",
            "description": null
          }
        }
      ],
      "examples": []
    },
    {
      "name": "getFirstOrNullObject",
      "kind": "read",
      "description": "Gets the first list in this collection. If this collection is empty, then this method will return an object with its `isNullObject` property set to `true`. For further information, see [*OrNullObject methods and properties](/en-us/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties).",
      "signatures": [
        {
          "params": [],
          "returns": {
            "type": "Word.List",
            "description": null
          }
        }
      ],
      "examples": []
    },
    {
      "name": "getItem",
      "kind": "read",
      "description": "Gets a list object by its ID.",
      "signatures": [
        {
          "params": [
            {
              "name": "id",
              "type": "number",
              "required": true,
              "description": "The list's ID."
            }
          ],
          "returns": {
            "type": "Word.List",
            "description": null
          }
        }
      ],
      "examples": []
    },
    {
      "name": "load",
      "kind": "load",
      "description": "Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.",
      "signatures": [
        {
          "params": [
            {
              "name": "options",
              "type": "Word.Interfaces.ListCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions",
              "required": false,
              "description": "Provides options for which properties of the object to load."
            }
          ],
          "returns": {
            "type": "Word.ListCollection",
            "description": null
          }
        },
        {
          "params": [
            {
              "name": "propertyNames",
              "type": "string | string[]",
              "required": false,
              "description": "A comma-delimited string or an array of strings that specify the properties to load."
            }
          ],
          "returns": {
            "type": "Word.ListCollection",
            "description": null
          }
        },
        {
          "params": [
            {
              "name": "propertyNamesAndPaths",
              "type": "OfficeExtension.LoadOption",
              "required": false,
              "description": "`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load."
            }
          ],
          "returns": {
            "type": "Word.ListCollection",
            "description": null
          }
        }
      ],
      "examples": []
    },
    {
      "name": "toJSON",
      "kind": "serialize",
      "description": "Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.) Whereas the original `Word.ListCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ListCollectionData`) that contains an \"items\" array with shallow copies of any loaded properties from the collection's items.",
      "signatures": [
        {
          "params": [],
          "returns": {
            "type": "Word.Interfaces.ListCollectionData",
            "description": null
          }
        }
      ],
      "examples": []
    },
    {
      "name": "track",
      "kind": "track",
      "description": "Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for [context.trackedObjects.add(thisObject)](/en-us/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member). If you're using this object across `.sync` calls and outside the sequential execution of a \".run\" batch, and get an \"InvalidObjectPath\" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.",
      "signatures": [
        {
          "params": [],
          "returns": {
            "type": "Word.ListCollection",
            "description": null
          }
        }
      ],
      "examples": []
    },
    {
      "name": "untrack",
      "kind": "untrack",
      "description": "Release the memory associated with this object, if it has previously been tracked. This call is shorthand for [context.trackedObjects.remove(thisObject)](/en-us/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member). Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.",
      "signatures": [
        {
          "params": [],
          "returns": {
            "type": "Word.ListCollection",
            "description": null
          }
        }
      ],
      "examples": []
    }
  ],
  "source": {
    "urls": [
      "https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/20-lists/organize-list.yaml"
    ]
  }
}