{
  "class": {
    "name": "Word.Range",
    "package": "word",
    "extends": [
      "OfficeExtension.ClientObject"
    ],
    "api_set": {
      "name": "WordApi",
      "status": "1.1"
    },
    "description": "Represents a contiguous area in a document.",
    "examples": [
      {
        "description": null,
        "usage_code": "// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/50-document/manage-comments.yaml\n\n// Gets the range of the first comment in the selected content.\nawait Word.run(async (context) => {\n  const comment: Word.Comment = context.document.getSelection().getComments().getFirstOrNullObject();\n  comment.load(\"contentRange\");\n  const range: Word.Range = comment.getRange();\n  range.load(\"text\");\n  await context.sync();\n\n  if (comment.isNullObject) {\n    console.warn(\"No comments in the selection, so no range to get.\");\n    return;\n  }\n\n  console.log(`Comment location: ${range.text}`);\n  const contentRange: Word.CommentContentRange = comment.contentRange;\n  console.log(\"Comment content range:\", contentRange);\n});",
        "output_code": null
      }
    ]
  },
  "properties": [
    {
      "name": "bold",
      "type": "boolean",
      "description": "Specifies whether the range is formatted as bold.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "boldBidirectional",
      "type": "boolean",
      "description": "Specifies whether the range is formatted as bold in a right-to-left language document.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "bookmarks",
      "type": "Word.BookmarkCollection",
      "description": "Returns a `BookmarkCollection` object that represents all the bookmarks in the range.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "borders",
      "type": "Word.BorderUniversalCollection",
      "description": "Returns a `BorderUniversalCollection` object that represents all the borders for the range.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "case",
      "type": "Word.CharacterCase | \"Next\" | \"Lower\" | \"Upper\" | \"TitleWord\" | \"TitleSentence\" | \"Toggle\" | \"HalfWidth\" | \"FullWidth\" | \"Katakana\" | \"Hiragana\"",
      "description": "Specifies a `CharacterCase` value that represents the case of the text in the range.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "characterWidth",
      "type": "Word.CharacterWidth | \"Half\" | \"Full\"",
      "description": "Specifies the character width of the range.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "combineCharacters",
      "type": "boolean",
      "description": "Specifies if the range contains combined characters.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "contentControls",
      "type": "Word.ContentControlCollection",
      "description": "Gets the collection of content control objects in the range.",
      "since": "WordApi 1.1",
      "examples": []
    },
    {
      "name": "context",
      "type": "RequestContext",
      "description": "The request context associated with the object. This connects the add-in's process to the Office host application's process.",
      "since": null,
      "examples": []
    },
    {
      "name": "disableCharacterSpaceGrid",
      "type": "boolean",
      "description": "Specifies if Microsoft Word ignores the number of characters per line for the corresponding `Range` object.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "emphasisMark",
      "type": "Word.EmphasisMark | \"None\" | \"OverSolidCircle\" | \"OverComma\" | \"OverWhiteCircle\" | \"UnderSolidCircle\"",
      "description": "Specifies the emphasis mark for a character or designated character string.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "end",
      "type": "number",
      "description": "Specifies the ending character position of the range.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "endnotes",
      "type": "Word.NoteItemCollection",
      "description": "Gets the collection of endnotes in the range.",
      "since": "WordApi 1.5",
      "examples": []
    },
    {
      "name": "fields",
      "type": "Word.FieldCollection",
      "description": "Gets the collection of field objects in the range.",
      "since": "WordApi 1.4",
      "examples": []
    },
    {
      "name": "fitTextWidth",
      "type": "number",
      "description": "Specifies the width (in the current measurement units) in which Microsoft Word fits the text in the current selection or range.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "font",
      "type": "Word.Font",
      "description": "Gets the text format of the range. Use this to get and set font name, size, color, and other properties.",
      "since": "WordApi 1.1",
      "examples": []
    },
    {
      "name": "footnotes",
      "type": "Word.NoteItemCollection",
      "description": "Gets the collection of footnotes in the range.",
      "since": "WordApi 1.5",
      "examples": [
        {
          "description": null,
          "usage_code": "// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/50-document/manage-footnotes.yaml\n\n// Gets the footnotes in the selected document range.\nawait Word.run(async (context) => {\n  const footnotes: Word.NoteItemCollection = context.document.getSelection().footnotes;\n  footnotes.load(\"length\");\n  await context.sync();\n\n  console.log(\"Number of footnotes in the selected range: \" + footnotes.items.length);\n});",
          "output_code": null
        }
      ]
    },
    {
      "name": "frames",
      "type": "Word.FrameCollection",
      "description": "Gets a `FrameCollection` object that represents all the frames in the range.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "grammarChecked",
      "type": "boolean",
      "description": "Specifies if a grammar check has been run on the range or document.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "hasNoProofing",
      "type": "boolean",
      "description": "Specifies the proofing status (spelling and grammar checking) of the range.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "highlightColorIndex",
      "type": "Word.ColorIndex | \"Auto\" | \"Black\" | \"Blue\" | \"Turquoise\" | \"BrightGreen\" | \"Pink\" | \"Red\" | \"Yellow\" | \"White\" | \"DarkBlue\" | \"Teal\" | \"Green\" | \"Violet\" | \"DarkRed\" | \"DarkYellow\" | \"Gray50\" | \"Gray25\" | \"ClassicRed\" | \"ClassicBlue\" | \"ByAuthor\"",
      "description": "Specifies the highlight color for the range.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "horizontalInVertical",
      "type": "Word.HorizontalInVerticalType | \"None\" | \"FitInLine\" | \"ResizeLine\"",
      "description": "Specifies the formatting for horizontal text set within vertical text.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "hyperlink",
      "type": "string",
      "description": "Gets the first hyperlink in the range, or sets a hyperlink on the range. All hyperlinks in the range are deleted when you set a new hyperlink on the range. Use a '#' to separate the address part from the optional location part.",
      "since": "WordApi 1.3",
      "examples": []
    },
    {
      "name": "hyperlinks",
      "type": "Word.HyperlinkCollection",
      "description": "Returns a `HyperlinkCollection` object that represents all the hyperlinks in the range.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "id",
      "type": "string",
      "description": "Specifies the ID for the range.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "inlinePictures",
      "type": "Word.InlinePictureCollection",
      "description": "Gets the collection of inline picture objects in the range.",
      "since": "WordApi 1.2",
      "examples": []
    },
    {
      "name": "isEmpty",
      "type": "boolean",
      "description": "Checks whether the range length is zero.",
      "since": "WordApi 1.3",
      "examples": []
    },
    {
      "name": "isEndOfRowMark",
      "type": "boolean",
      "description": "Gets if the range is collapsed and is located at the end-of-row mark in a table.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "isTextVisibleOnScreen",
      "type": "boolean",
      "description": "Gets whether the text in the range is visible on the screen.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "italic",
      "type": "boolean",
      "description": "Specifies if the font or range is formatted as italic.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "italicBidirectional",
      "type": "boolean",
      "description": "Specifies if the font or range is formatted as italic (right-to-left languages).",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "kana",
      "type": "Word.Kana | \"Katakana\" | \"Hiragana\"",
      "description": "Specifies whether the range of Japanese language text is hiragana or katakana.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "languageDetected",
      "type": "boolean",
      "description": "Specifies whether Microsoft Word has detected the language of the text in the range.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "languageId",
      "type": "Word.LanguageId | \"Afrikaans\" | \"Albanian\" | \"Amharic\" | \"Arabic\" | \"ArabicAlgeria\" | \"ArabicBahrain\" | \"ArabicEgypt\" | \"ArabicIraq\" | \"ArabicJordan\" | \"ArabicKuwait\" | \"ArabicLebanon\" | \"ArabicLibya\" | \"ArabicMorocco\" | \"ArabicOman\" | \"ArabicQatar\" | \"ArabicSyria\" | \"ArabicTunisia\" | \"ArabicUAE\" | \"ArabicYemen\" | \"Armenian\" | \"Assamese\" | \"AzeriCyrillic\" | \"AzeriLatin\" | \"Basque\" | \"BelgianDutch\" | \"BelgianFrench\" | \"Bengali\" | \"Bulgarian\" | \"Burmese\" | \"Belarusian\" | \"Catalan\" | \"Cherokee\" | \"ChineseHongKongSAR\" | \"ChineseMacaoSAR\" | \"ChineseSingapore\" | \"Croatian\" | \"Czech\" | \"Danish\" | \"Divehi\" | \"Dutch\" | \"Edo\" | \"EnglishAUS\" | \"EnglishBelize\" | \"EnglishCanadian\" | \"EnglishCaribbean\" | \"EnglishIndonesia\" | \"EnglishIreland\" | \"EnglishJamaica\" | \"EnglishNewZealand\" | \"EnglishPhilippines\" | \"EnglishSouthAfrica\" | \"EnglishTrinidadTobago\" | \"EnglishUK\" | \"EnglishUS\" | \"EnglishZimbabwe\" | \"Estonian\" | \"Faeroese\" | \"Filipino\" | \"Finnish\" | \"French\" | \"FrenchCameroon\" | \"FrenchCanadian\" | \"FrenchCongoDRC\" | \"FrenchCotedIvoire\" | \"FrenchHaiti\" | \"FrenchLuxembourg\" | \"FrenchMali\" | \"FrenchMonaco\" | \"FrenchMorocco\" | \"FrenchReunion\" | \"FrenchSenegal\" | \"FrenchWestIndies\" | \"FrisianNetherlands\" | \"Fulfulde\" | \"GaelicIreland\" | \"GaelicScotland\" | \"Galician\" | \"Georgian\" | \"German\" | \"GermanAustria\" | \"GermanLiechtenstein\" | \"GermanLuxembourg\" | \"Greek\" | \"Guarani\" | \"Gujarati\" | \"Hausa\" | \"Hawaiian\" | \"Hebrew\" | \"Hindi\" | \"Hungarian\" | \"Ibibio\" | \"Icelandic\" | \"Igbo\" | \"Indonesian\" | \"Inuktitut\" | \"Italian\" | \"Japanese\" | \"Kannada\" | \"Kanuri\" | \"Kashmiri\" | \"Kazakh\" | \"Khmer\" | \"Kirghiz\" | \"Konkani\" | \"Korean\" | \"Kyrgyz\" | \"LanguageNone\" | \"Lao\" | \"Latin\" | \"Latvian\" | \"Lithuanian\" | \"MacedonianFYROM\" | \"Malayalam\" | \"MalayBruneiDarussalam\" | \"Malaysian\" | \"Maltese\" | \"Manipuri\" | \"Marathi\" | \"MexicanSpanish\" | \"Mongolian\" | \"Nepali\" | \"NoProofing\" | \"NorwegianBokmol\" | \"NorwegianNynorsk\" | \"Oriya\" | \"Oromo\" | \"Pashto\" | \"Persian\" | \"Polish\" | \"Portuguese\" | \"PortugueseBrazil\" | \"Punjabi\" | \"RhaetoRomanic\" | \"Romanian\" | \"RomanianMoldova\" | \"Russian\" | \"RussianMoldova\" | \"SamiLappish\" | \"Sanskrit\" | \"SerbianCyrillic\" | \"SerbianLatin\" | \"Sesotho\" | \"SimplifiedChinese\" | \"Sindhi\" | \"SindhiPakistan\" | \"Sinhalese\" | \"Slovak\" | \"Slovenian\" | \"Somali\" | \"Sorbian\" | \"Spanish\" | \"SpanishArgentina\" | \"SpanishBolivia\" | \"SpanishChile\" | \"SpanishColombia\" | \"SpanishCostaRica\" | \"SpanishDominicanRepublic\" | \"SpanishEcuador\" | \"SpanishElSalvador\" | \"SpanishGuatemala\" | \"SpanishHonduras\" | \"SpanishModernSort\" | \"SpanishNicaragua\" | \"SpanishPanama\" | \"SpanishParaguay\" | \"SpanishPeru\" | \"SpanishPuertoRico\" | \"SpanishUruguay\" | \"SpanishVenezuela\" | \"Sutu\" | \"Swahili\" | \"Swedish\" | \"SwedishFinland\" | \"SwissFrench\" | \"SwissGerman\" | \"SwissItalian\" | \"Syriac\" | \"Tajik\" | \"Tamazight\" | \"TamazightLatin\" | \"Tamil\" | \"Tatar\" | \"Telugu\" | \"Thai\" | \"Tibetan\" | \"TigrignaEritrea\" | \"TigrignaEthiopic\" | \"TraditionalChinese\" | \"Tsonga\" | \"Tswana\" | \"Turkish\" | \"Turkmen\" | \"Ukrainian\" | \"Urdu\" | \"UzbekCyrillic\" | \"UzbekLatin\" | \"Venda\" | \"Vietnamese\" | \"Welsh\" | \"Xhosa\" | \"Yi\" | \"Yiddish\" | \"Yoruba\" | \"Zulu\"",
      "description": "Specifies a `LanguageId` value that represents the language for the range.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "languageIdFarEast",
      "type": "Word.LanguageId | \"Afrikaans\" | \"Albanian\" | \"Amharic\" | \"Arabic\" | \"ArabicAlgeria\" | \"ArabicBahrain\" | \"ArabicEgypt\" | \"ArabicIraq\" | \"ArabicJordan\" | \"ArabicKuwait\" | \"ArabicLebanon\" | \"ArabicLibya\" | \"ArabicMorocco\" | \"ArabicOman\" | \"ArabicQatar\" | \"ArabicSyria\" | \"ArabicTunisia\" | \"ArabicUAE\" | \"ArabicYemen\" | \"Armenian\" | \"Assamese\" | \"AzeriCyrillic\" | \"AzeriLatin\" | \"Basque\" | \"BelgianDutch\" | \"BelgianFrench\" | \"Bengali\" | \"Bulgarian\" | \"Burmese\" | \"Belarusian\" | \"Catalan\" | \"Cherokee\" | \"ChineseHongKongSAR\" | \"ChineseMacaoSAR\" | \"ChineseSingapore\" | \"Croatian\" | \"Czech\" | \"Danish\" | \"Divehi\" | \"Dutch\" | \"Edo\" | \"EnglishAUS\" | \"EnglishBelize\" | \"EnglishCanadian\" | \"EnglishCaribbean\" | \"EnglishIndonesia\" | \"EnglishIreland\" | \"EnglishJamaica\" | \"EnglishNewZealand\" | \"EnglishPhilippines\" | \"EnglishSouthAfrica\" | \"EnglishTrinidadTobago\" | \"EnglishUK\" | \"EnglishUS\" | \"EnglishZimbabwe\" | \"Estonian\" | \"Faeroese\" | \"Filipino\" | \"Finnish\" | \"French\" | \"FrenchCameroon\" | \"FrenchCanadian\" | \"FrenchCongoDRC\" | \"FrenchCotedIvoire\" | \"FrenchHaiti\" | \"FrenchLuxembourg\" | \"FrenchMali\" | \"FrenchMonaco\" | \"FrenchMorocco\" | \"FrenchReunion\" | \"FrenchSenegal\" | \"FrenchWestIndies\" | \"FrisianNetherlands\" | \"Fulfulde\" | \"GaelicIreland\" | \"GaelicScotland\" | \"Galician\" | \"Georgian\" | \"German\" | \"GermanAustria\" | \"GermanLiechtenstein\" | \"GermanLuxembourg\" | \"Greek\" | \"Guarani\" | \"Gujarati\" | \"Hausa\" | \"Hawaiian\" | \"Hebrew\" | \"Hindi\" | \"Hungarian\" | \"Ibibio\" | \"Icelandic\" | \"Igbo\" | \"Indonesian\" | \"Inuktitut\" | \"Italian\" | \"Japanese\" | \"Kannada\" | \"Kanuri\" | \"Kashmiri\" | \"Kazakh\" | \"Khmer\" | \"Kirghiz\" | \"Konkani\" | \"Korean\" | \"Kyrgyz\" | \"LanguageNone\" | \"Lao\" | \"Latin\" | \"Latvian\" | \"Lithuanian\" | \"MacedonianFYROM\" | \"Malayalam\" | \"MalayBruneiDarussalam\" | \"Malaysian\" | \"Maltese\" | \"Manipuri\" | \"Marathi\" | \"MexicanSpanish\" | \"Mongolian\" | \"Nepali\" | \"NoProofing\" | \"NorwegianBokmol\" | \"NorwegianNynorsk\" | \"Oriya\" | \"Oromo\" | \"Pashto\" | \"Persian\" | \"Polish\" | \"Portuguese\" | \"PortugueseBrazil\" | \"Punjabi\" | \"RhaetoRomanic\" | \"Romanian\" | \"RomanianMoldova\" | \"Russian\" | \"RussianMoldova\" | \"SamiLappish\" | \"Sanskrit\" | \"SerbianCyrillic\" | \"SerbianLatin\" | \"Sesotho\" | \"SimplifiedChinese\" | \"Sindhi\" | \"SindhiPakistan\" | \"Sinhalese\" | \"Slovak\" | \"Slovenian\" | \"Somali\" | \"Sorbian\" | \"Spanish\" | \"SpanishArgentina\" | \"SpanishBolivia\" | \"SpanishChile\" | \"SpanishColombia\" | \"SpanishCostaRica\" | \"SpanishDominicanRepublic\" | \"SpanishEcuador\" | \"SpanishElSalvador\" | \"SpanishGuatemala\" | \"SpanishHonduras\" | \"SpanishModernSort\" | \"SpanishNicaragua\" | \"SpanishPanama\" | \"SpanishParaguay\" | \"SpanishPeru\" | \"SpanishPuertoRico\" | \"SpanishUruguay\" | \"SpanishVenezuela\" | \"Sutu\" | \"Swahili\" | \"Swedish\" | \"SwedishFinland\" | \"SwissFrench\" | \"SwissGerman\" | \"SwissItalian\" | \"Syriac\" | \"Tajik\" | \"Tamazight\" | \"TamazightLatin\" | \"Tamil\" | \"Tatar\" | \"Telugu\" | \"Thai\" | \"Tibetan\" | \"TigrignaEritrea\" | \"TigrignaEthiopic\" | \"TraditionalChinese\" | \"Tsonga\" | \"Tswana\" | \"Turkish\" | \"Turkmen\" | \"Ukrainian\" | \"Urdu\" | \"UzbekCyrillic\" | \"UzbekLatin\" | \"Venda\" | \"Vietnamese\" | \"Welsh\" | \"Xhosa\" | \"Yi\" | \"Yiddish\" | \"Yoruba\" | \"Zulu\"",
      "description": "Specifies an East Asian language for the range.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "languageIdOther",
      "type": "Word.LanguageId | \"Afrikaans\" | \"Albanian\" | \"Amharic\" | \"Arabic\" | \"ArabicAlgeria\" | \"ArabicBahrain\" | \"ArabicEgypt\" | \"ArabicIraq\" | \"ArabicJordan\" | \"ArabicKuwait\" | \"ArabicLebanon\" | \"ArabicLibya\" | \"ArabicMorocco\" | \"ArabicOman\" | \"ArabicQatar\" | \"ArabicSyria\" | \"ArabicTunisia\" | \"ArabicUAE\" | \"ArabicYemen\" | \"Armenian\" | \"Assamese\" | \"AzeriCyrillic\" | \"AzeriLatin\" | \"Basque\" | \"BelgianDutch\" | \"BelgianFrench\" | \"Bengali\" | \"Bulgarian\" | \"Burmese\" | \"Belarusian\" | \"Catalan\" | \"Cherokee\" | \"ChineseHongKongSAR\" | \"ChineseMacaoSAR\" | \"ChineseSingapore\" | \"Croatian\" | \"Czech\" | \"Danish\" | \"Divehi\" | \"Dutch\" | \"Edo\" | \"EnglishAUS\" | \"EnglishBelize\" | \"EnglishCanadian\" | \"EnglishCaribbean\" | \"EnglishIndonesia\" | \"EnglishIreland\" | \"EnglishJamaica\" | \"EnglishNewZealand\" | \"EnglishPhilippines\" | \"EnglishSouthAfrica\" | \"EnglishTrinidadTobago\" | \"EnglishUK\" | \"EnglishUS\" | \"EnglishZimbabwe\" | \"Estonian\" | \"Faeroese\" | \"Filipino\" | \"Finnish\" | \"French\" | \"FrenchCameroon\" | \"FrenchCanadian\" | \"FrenchCongoDRC\" | \"FrenchCotedIvoire\" | \"FrenchHaiti\" | \"FrenchLuxembourg\" | \"FrenchMali\" | \"FrenchMonaco\" | \"FrenchMorocco\" | \"FrenchReunion\" | \"FrenchSenegal\" | \"FrenchWestIndies\" | \"FrisianNetherlands\" | \"Fulfulde\" | \"GaelicIreland\" | \"GaelicScotland\" | \"Galician\" | \"Georgian\" | \"German\" | \"GermanAustria\" | \"GermanLiechtenstein\" | \"GermanLuxembourg\" | \"Greek\" | \"Guarani\" | \"Gujarati\" | \"Hausa\" | \"Hawaiian\" | \"Hebrew\" | \"Hindi\" | \"Hungarian\" | \"Ibibio\" | \"Icelandic\" | \"Igbo\" | \"Indonesian\" | \"Inuktitut\" | \"Italian\" | \"Japanese\" | \"Kannada\" | \"Kanuri\" | \"Kashmiri\" | \"Kazakh\" | \"Khmer\" | \"Kirghiz\" | \"Konkani\" | \"Korean\" | \"Kyrgyz\" | \"LanguageNone\" | \"Lao\" | \"Latin\" | \"Latvian\" | \"Lithuanian\" | \"MacedonianFYROM\" | \"Malayalam\" | \"MalayBruneiDarussalam\" | \"Malaysian\" | \"Maltese\" | \"Manipuri\" | \"Marathi\" | \"MexicanSpanish\" | \"Mongolian\" | \"Nepali\" | \"NoProofing\" | \"NorwegianBokmol\" | \"NorwegianNynorsk\" | \"Oriya\" | \"Oromo\" | \"Pashto\" | \"Persian\" | \"Polish\" | \"Portuguese\" | \"PortugueseBrazil\" | \"Punjabi\" | \"RhaetoRomanic\" | \"Romanian\" | \"RomanianMoldova\" | \"Russian\" | \"RussianMoldova\" | \"SamiLappish\" | \"Sanskrit\" | \"SerbianCyrillic\" | \"SerbianLatin\" | \"Sesotho\" | \"SimplifiedChinese\" | \"Sindhi\" | \"SindhiPakistan\" | \"Sinhalese\" | \"Slovak\" | \"Slovenian\" | \"Somali\" | \"Sorbian\" | \"Spanish\" | \"SpanishArgentina\" | \"SpanishBolivia\" | \"SpanishChile\" | \"SpanishColombia\" | \"SpanishCostaRica\" | \"SpanishDominicanRepublic\" | \"SpanishEcuador\" | \"SpanishElSalvador\" | \"SpanishGuatemala\" | \"SpanishHonduras\" | \"SpanishModernSort\" | \"SpanishNicaragua\" | \"SpanishPanama\" | \"SpanishParaguay\" | \"SpanishPeru\" | \"SpanishPuertoRico\" | \"SpanishUruguay\" | \"SpanishVenezuela\" | \"Sutu\" | \"Swahili\" | \"Swedish\" | \"SwedishFinland\" | \"SwissFrench\" | \"SwissGerman\" | \"SwissItalian\" | \"Syriac\" | \"Tajik\" | \"Tamazight\" | \"TamazightLatin\" | \"Tamil\" | \"Tatar\" | \"Telugu\" | \"Thai\" | \"Tibetan\" | \"TigrignaEritrea\" | \"TigrignaEthiopic\" | \"TraditionalChinese\" | \"Tsonga\" | \"Tswana\" | \"Turkish\" | \"Turkmen\" | \"Ukrainian\" | \"Urdu\" | \"UzbekCyrillic\" | \"UzbekLatin\" | \"Venda\" | \"Vietnamese\" | \"Welsh\" | \"Xhosa\" | \"Yi\" | \"Yiddish\" | \"Yoruba\" | \"Zulu\"",
      "description": "Specifies a language for the range that isn't classified as an East Asian language.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "listFormat",
      "type": "Word.ListFormat",
      "description": "Returns a `ListFormat` object that represents all the list formatting characteristics of the range.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "lists",
      "type": "Word.ListCollection",
      "description": "Gets the collection of list objects in the range.",
      "since": "WordApi 1.3",
      "examples": []
    },
    {
      "name": "pages",
      "type": "Word.PageCollection",
      "description": "Gets the collection of pages in the range.",
      "since": "WordApiDesktop 1.2",
      "examples": []
    },
    {
      "name": "paragraphs",
      "type": "Word.ParagraphCollection",
      "description": "Gets the collection of paragraph objects in the range.",
      "since": "WordApi 1.1",
      "examples": []
    },
    {
      "name": "parentBody",
      "type": "Word.Body",
      "description": "Gets the parent body of the range.",
      "since": "WordApi 1.3",
      "examples": []
    },
    {
      "name": "parentContentControl",
      "type": "Word.ContentControl",
      "description": "Gets the currently supported content control that contains the range. Throws an `ItemNotFound` error if there isn't a parent content control.",
      "since": "WordApi 1.1",
      "examples": [
        {
          "description": null,
          "usage_code": "// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/10-content-controls/insert-and-change-checkbox-content-control.yaml\n\n// Toggles the isChecked property of the first checkbox content control found in the selection.\nawait Word.run(async (context) => {\n  const selectedRange: Word.Range = context.document.getSelection();\n  let selectedContentControl = selectedRange\n    .getContentControls({\n      types: [Word.ContentControlType.checkBox]\n    })\n    .getFirstOrNullObject();\n  selectedContentControl.load(\"id,checkboxContentControl/isChecked\");\n\n  await context.sync();\n\n  if (selectedContentControl.isNullObject) {\n    const parentContentControl: Word.ContentControl = selectedRange.parentContentControl;\n    parentContentControl.load(\"id,type,checkboxContentControl/isChecked\");\n    await context.sync();\n\n    if (parentContentControl.isNullObject || parentContentControl.type !== Word.ContentControlType.checkBox) {\n      console.warn(\"No checkbox content control is currently selected.\");\n      return;\n    } else {\n      selectedContentControl = parentContentControl;\n    }\n  }\n\n  const isCheckedBefore = selectedContentControl.checkboxContentControl.isChecked;\n  console.log(\"isChecked state before:\", `id: ${selectedContentControl.id} ... isChecked: ${isCheckedBefore}`);\n  selectedContentControl.checkboxContentControl.isChecked = !isCheckedBefore;\n  selectedContentControl.load(\"id,checkboxContentControl/isChecked\");\n  await context.sync();\n\n  console.log(\n    \"isChecked state after:\",\n    `id: ${selectedContentControl.id} ... isChecked: ${selectedContentControl.checkboxContentControl.isChecked}`\n  );\n});",
          "output_code": null
        }
      ]
    },
    {
      "name": "parentContentControlOrNullObject",
      "type": "Word.ContentControl",
      "description": "Gets the currently supported content control that contains the range. If there isn't a parent content control, then this method will return an object with its `isNullObject` property set to `true`. For further information, see [*OrNullObject methods and properties](/en-us/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties).",
      "since": "WordApi 1.3",
      "examples": []
    },
    {
      "name": "parentTable",
      "type": "Word.Table",
      "description": "Gets the table that contains the range. Throws an `ItemNotFound` error if it isn't contained in a table.",
      "since": "WordApi 1.3",
      "examples": []
    },
    {
      "name": "parentTableCell",
      "type": "Word.TableCell",
      "description": "Gets the table cell that contains the range. Throws an `ItemNotFound` error if it isn't contained in a table cell.",
      "since": "WordApi 1.3",
      "examples": []
    },
    {
      "name": "parentTableCellOrNullObject",
      "type": "Word.TableCell",
      "description": "Gets the table cell that contains the range. If it isn't contained in a table cell, then this method will return an object with its `isNullObject` property set to `true`. For further information, see [*OrNullObject methods and properties](/en-us/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties).",
      "since": "WordApi 1.3",
      "examples": []
    },
    {
      "name": "parentTableOrNullObject",
      "type": "Word.Table",
      "description": "Gets the table that contains the range. If it isn't contained in a table, then this method will return an object with its `isNullObject` property set to `true`. For further information, see [*OrNullObject methods and properties](/en-us/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties).",
      "since": "WordApi 1.3",
      "examples": []
    },
    {
      "name": "sections",
      "type": "Word.SectionCollection",
      "description": "Gets the collection of sections in the range.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "shading",
      "type": "Word.ShadingUniversal",
      "description": "Returns a `ShadingUniversal` object that refers to the shading formatting for the range.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "shapes",
      "type": "Word.ShapeCollection",
      "description": "Gets the collection of shape objects anchored in the range, including both inline and floating shapes. Currently, only the following shapes are supported: text boxes, geometric shapes, groups, pictures, and canvases.",
      "since": "WordApiDesktop 1.2",
      "examples": []
    },
    {
      "name": "showAll",
      "type": "boolean",
      "description": "Specifies if all nonprinting characters (such as hidden text, tab marks, space marks, and paragraph marks) are displayed.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "spellingChecked",
      "type": "boolean",
      "description": "Specifies if spelling has been checked throughout the range or document.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "start",
      "type": "number",
      "description": "Specifies the starting character position of the range.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "storyLength",
      "type": "number",
      "description": "Gets the number of characters in the story that contains the range.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "storyType",
      "type": "Word.StoryType | \"MainText\" | \"Footnotes\" | \"Endnotes\" | \"Comments\" | \"TextFrame\" | \"EvenPagesHeader\" | \"PrimaryHeader\" | \"EvenPagesFooter\" | \"PrimaryFooter\" | \"FirstPageHeader\" | \"FirstPageFooter\" | \"FootnoteSeparator\" | \"FootnoteContinuationSeparator\" | \"FootnoteContinuationNotice\" | \"EndnoteSeparator\" | \"EndnoteContinuationSeparator\" | \"EndnoteContinuationNotice\"",
      "description": "Gets the story type for the range.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "style",
      "type": "string",
      "description": "Specifies the style name for the range. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the \"styleBuiltIn\" property.",
      "since": "WordApi 1.1",
      "examples": []
    },
    {
      "name": "styleBuiltIn",
      "type": "Word.BuiltInStyleName | \"Other\" | \"Normal\" | \"Heading1\" | \"Heading2\" | \"Heading3\" | \"Heading4\" | \"Heading5\" | \"Heading6\" | \"Heading7\" | \"Heading8\" | \"Heading9\" | \"Toc1\" | \"Toc2\" | \"Toc3\" | \"Toc4\" | \"Toc5\" | \"Toc6\" | \"Toc7\" | \"Toc8\" | \"Toc9\" | \"FootnoteText\" | \"Header\" | \"Footer\" | \"Caption\" | \"FootnoteReference\" | \"EndnoteReference\" | \"EndnoteText\" | \"Title\" | \"Subtitle\" | \"Hyperlink\" | \"Strong\" | \"Emphasis\" | \"NoSpacing\" | \"ListParagraph\" | \"Quote\" | \"IntenseQuote\" | \"SubtleEmphasis\" | \"IntenseEmphasis\" | \"SubtleReference\" | \"IntenseReference\" | \"BookTitle\" | \"Bibliography\" | \"TocHeading\" | \"TableGrid\" | \"PlainTable1\" | \"PlainTable2\" | \"PlainTable3\" | \"PlainTable4\" | \"PlainTable5\" | \"TableGridLight\" | \"GridTable1Light\" | \"GridTable1Light_Accent1\" | \"GridTable1Light_Accent2\" | \"GridTable1Light_Accent3\" | \"GridTable1Light_Accent4\" | \"GridTable1Light_Accent5\" | \"GridTable1Light_Accent6\" | \"GridTable2\" | \"GridTable2_Accent1\" | \"GridTable2_Accent2\" | \"GridTable2_Accent3\" | \"GridTable2_Accent4\" | \"GridTable2_Accent5\" | \"GridTable2_Accent6\" | \"GridTable3\" | \"GridTable3_Accent1\" | \"GridTable3_Accent2\" | \"GridTable3_Accent3\" | \"GridTable3_Accent4\" | \"GridTable3_Accent5\" | \"GridTable3_Accent6\" | \"GridTable4\" | \"GridTable4_Accent1\" | \"GridTable4_Accent2\" | \"GridTable4_Accent3\" | \"GridTable4_Accent4\" | \"GridTable4_Accent5\" | \"GridTable4_Accent6\" | \"GridTable5Dark\" | \"GridTable5Dark_Accent1\" | \"GridTable5Dark_Accent2\" | \"GridTable5Dark_Accent3\" | \"GridTable5Dark_Accent4\" | \"GridTable5Dark_Accent5\" | \"GridTable5Dark_Accent6\" | \"GridTable6Colorful\" | \"GridTable6Colorful_Accent1\" | \"GridTable6Colorful_Accent2\" | \"GridTable6Colorful_Accent3\" | \"GridTable6Colorful_Accent4\" | \"GridTable6Colorful_Accent5\" | \"GridTable6Colorful_Accent6\" | \"GridTable7Colorful\" | \"GridTable7Colorful_Accent1\" | \"GridTable7Colorful_Accent2\" | \"GridTable7Colorful_Accent3\" | \"GridTable7Colorful_Accent4\" | \"GridTable7Colorful_Accent5\" | \"GridTable7Colorful_Accent6\" | \"ListTable1Light\" | \"ListTable1Light_Accent1\" | \"ListTable1Light_Accent2\" | \"ListTable1Light_Accent3\" | \"ListTable1Light_Accent4\" | \"ListTable1Light_Accent5\" | \"ListTable1Light_Accent6\" | \"ListTable2\" | \"ListTable2_Accent1\" | \"ListTable2_Accent2\" | \"ListTable2_Accent3\" | \"ListTable2_Accent4\" | \"ListTable2_Accent5\" | \"ListTable2_Accent6\" | \"ListTable3\" | \"ListTable3_Accent1\" | \"ListTable3_Accent2\" | \"ListTable3_Accent3\" | \"ListTable3_Accent4\" | \"ListTable3_Accent5\" | \"ListTable3_Accent6\" | \"ListTable4\" | \"ListTable4_Accent1\" | \"ListTable4_Accent2\" | \"ListTable4_Accent3\" | \"ListTable4_Accent4\" | \"ListTable4_Accent5\" | \"ListTable4_Accent6\" | \"ListTable5Dark\" | \"ListTable5Dark_Accent1\" | \"ListTable5Dark_Accent2\" | \"ListTable5Dark_Accent3\" | \"ListTable5Dark_Accent4\" | \"ListTable5Dark_Accent5\" | \"ListTable5Dark_Accent6\" | \"ListTable6Colorful\" | \"ListTable6Colorful_Accent1\" | \"ListTable6Colorful_Accent2\" | \"ListTable6Colorful_Accent3\" | \"ListTable6Colorful_Accent4\" | \"ListTable6Colorful_Accent5\" | \"ListTable6Colorful_Accent6\" | \"ListTable7Colorful\" | \"ListTable7Colorful_Accent1\" | \"ListTable7Colorful_Accent2\" | \"ListTable7Colorful_Accent3\" | \"ListTable7Colorful_Accent4\" | \"ListTable7Colorful_Accent5\" | \"ListTable7Colorful_Accent6\"",
      "description": "Specifies the built-in style name for the range. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the \"style\" property.",
      "since": "WordApi 1.3",
      "examples": [
        {
          "description": null,
          "usage_code": "// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/90-scenarios/doc-assembly.yaml\n\nawait Word.run(async (context) => {\n    const header: Word.Range = context.document.body.insertText(\"This is a sample Heading 1 Title!!\\n\",\n        \"Start\" /*this means at the beginning of the body */);\n    header.styleBuiltIn = Word.BuiltInStyleName.heading1;\n\n    await context.sync();\n});",
          "output_code": null
        }
      ]
    },
    {
      "name": "tableColumns",
      "type": "Word.TableColumnCollection",
      "description": "Gets a `TableColumnCollection` object that represents all the table columns in the range.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "tables",
      "type": "Word.TableCollection",
      "description": "Gets the collection of table objects in the range.",
      "since": "WordApi 1.3",
      "examples": []
    },
    {
      "name": "text",
      "type": "string",
      "description": "Gets the text of the range.",
      "since": "WordApi 1.1",
      "examples": []
    },
    {
      "name": "twoLinesInOne",
      "type": "Word.TwoLinesInOneType | \"None\" | \"NoBrackets\" | \"Parentheses\" | \"SquareBrackets\" | \"AngleBrackets\" | \"CurlyBrackets\"",
      "description": "Specifies whether Microsoft Word sets two lines of text in one and specifies the characters that enclose the text, if any.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    },
    {
      "name": "underline",
      "type": "Word.Underline | \"None\" | \"Single\" | \"Words\" | \"Double\" | \"Dotted\" | \"Thick\" | \"Dash\" | \"DotDash\" | \"DotDotDash\" | \"Wavy\" | \"WavyHeavy\" | \"DottedHeavy\" | \"DashHeavy\" | \"DotDashHeavy\" | \"DotDotDashHeavy\" | \"DashLong\" | \"DashLongHeavy\" | \"WavyDouble\"",
      "description": "Specifies the type of underline applied to the range.",
      "since": "WordApi BETA (PREVIEW ONLY)",
      "examples": []
    }
  ],
  "methods": [
    {
      "name": "clear",
      "kind": "delete",
      "description":