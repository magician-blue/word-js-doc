{
  "class": {
    "name": "DocumentCreated",
    "package": "word",
    "extends": [
      "OfficeExtension.ClientObject"
    ],
    "api_set": {
      "name": "WordApi",
      "status": "1.3"
    },
    "description": "The DocumentCreated object is the top level object created by Application.CreateDocument. A DocumentCreated object is a special Document object.",
    "examples": [
      {
        "description": null,
        "usage_code": "// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/50-document/insert-external-document.yaml\n\n// Updates the text of the current document with the text from another document passed in as a Base64-encoded string.\nawait Word.run(async (context) => {\n  // Use the Base64-encoded string representation of the selected .docx file.\n  const externalDoc: Word.DocumentCreated = context.application.createDocument(externalDocument);\n  await context.sync();\n\n  if (!Office.context.requirements.isSetSupported(\"WordApiHiddenDocument\", \"1.3\")) {\n    console.warn(\"The WordApiHiddenDocument 1.3 requirement set isn't supported on this client so can't proceed. Try this action on a platform that supports this requirement set.\");\n    return;\n  }\n\n  const externalDocBody: Word.Body = externalDoc.body;\n  externalDocBody.load(\"text\");\n  await context.sync();\n\n  // Insert the external document's text at the beginning of the current document's body.\n  const externalDocBodyText = externalDocBody.text;\n  const currentDocBody: Word.Body = context.document.body;\n  currentDocBody.insertText(externalDocBodyText, Word.InsertLocation.start);\n  await context.sync();\n});",
        "output_code": null
      }
    ]
  },
  "properties": [
    {
      "name": "body",
      "type": "Word.Body",
      "description": "Gets the body object of the document. The body is the text that excludes headers, footers, footnotes, textboxes, etc.",
      "since": "WordApiHiddenDocument 1.3",
      "examples": []
    },
    {
      "name": "contentControls",
      "type": "Word.ContentControlCollection",
      "description": "Gets the collection of content control objects in the document. This includes content controls in the body of the document, headers, footers, textboxes, etc.",
      "since": "WordApiHiddenDocument 1.3",
      "examples": []
    },
    {
      "name": "context",
      "type": "RequestContext",
      "description": "The request context associated with the object. This connects the add-in's process to the Office host application's process.",
      "since": null,
      "examples": []
    },
    {
      "name": "customXmlParts",
      "type": "Word.CustomXmlPartCollection",
      "description": "Gets the custom XML parts in the document.",
      "since": "WordApiHiddenDocument 1.4",
      "examples": []
    },
    {
      "name": "properties",
      "type": "Word.DocumentProperties",
      "description": "Gets the properties of the document.",
      "since": "WordApiHiddenDocument 1.3",
      "examples": []
    },
    {
      "name": "saved",
      "type": "boolean",
      "description": "Indicates whether the changes in the document have been saved. A value of true indicates that the document hasn't changed since it was saved.",
      "since": "WordApiHiddenDocument 1.3",
      "examples": []
    },
    {
      "name": "sections",
      "type": "Word.SectionCollection",
      "description": "Gets the collection of section objects in the document.",
      "since": "WordApiHiddenDocument 1.3",
      "examples": []
    },
    {
      "name": "settings",
      "type": "Word.SettingCollection",
      "description": "Gets the add-in's settings in the document.",
      "since": "WordApiHiddenDocument 1.4",
      "examples": []
    }
  ],
  "methods": [
    {
      "name": "addStyle",
      "kind": "create",
      "description": "Adds a style into the document by name and type.",
      "signatures": [
        {
          "params": [
            {
              "name": "name",
              "type": "string",
              "required": true,
              "description": "A string representing the style name."
            },
            {
              "name": "type",
              "type": "Word.StyleType",
              "required": true,
              "description": "The style type, including character, list, paragraph, or table."
            }
          ],
          "returns": {
            "type": "Word.Style",
            "description": null
          }
        },
        {
          "params": [
            {
              "name": "name",
              "type": "string",
              "required": true,
              "description": "A string representing the style name."
            },
            {
              "name": "type",
              "type": "\"Character\" | \"List\" | \"Paragraph\" | \"Table\"",
              "required": true,
              "description": "The style type, including character, list, paragraph, or table."
            }
          ],
          "returns": {
            "type": "Word.Style",
            "description": null
          }
        }
      ],
      "examples": []
    },
    {
      "name": "deleteBookmark",
      "kind": "delete",
      "description": "Deletes a bookmark, if it exists, from the document.",
      "signatures": [
        {
          "params": [
            {
              "name": "name",
              "type": "string",
              "required": true,
              "description": "The case-insensitive bookmark name."
            }
          ],
          "returns": {
            "type": "void",
            "description": null
          }
        }
      ],
      "examples": []
    },
    {
      "name": "getBookmarkRange",
      "kind": "read",
      "description": "Gets a bookmark's range. Throws an ItemNotFound error if the bookmark doesn't exist.",
      "signatures": [
        {
          "params": [
            {
              "name": "name",
              "type": "string",
              "required": true,
              "description": "The case-insensitive bookmark name."
            }
          ],
          "returns": {
            "type": "Word.Range",
            "description": null
          }
        }
      ],
      "examples": []
    },
    {
      "name": "getBookmarkRangeOrNullObject",
      "kind": "read",
      "description": "Gets a bookmark's range. If the bookmark doesn't exist, then this method will return an object with its isNullObject property set to true. For further information, see [*OrNullObject methods and properties](/en-us/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties).",
      "signatures": [
        {
          "params": [
            {
              "name": "name",
              "type": "string",
              "required": true,
              "description": "The case-insensitive bookmark name. Only alphanumeric and underscore characters are supported. It must begin with a letter but if you want to tag the bookmark as hidden, then start the name with an underscore character. Names can't be longer than 40 characters."
            }
          ],
          "returns": {
            "type": "Word.Range",
            "description": null
          }
        }
      ],
      "examples": []
    },
    {
      "name": "getContentControls",
      "kind": "read",
      "description": "Gets the currently supported content controls in the document.",
      "signatures": [
        {
          "params": [
            {
              "name": "options",
              "type": "Word.ContentControlOptions",
              "required": false,
              "description": "Options that define which content controls are returned."
            }
          ],
          "returns": {
            "type": "Word.ContentControlCollection",
            "description": null
          }
        }
      ],
      "examples": []
    },
    {
      "name": "getStyles",
      "kind": "read",
      "description": "Gets a StyleCollection object that represents the whole style set of the document.",
      "signatures": [
        {
          "params": [],
          "returns": {
            "type": "Word.StyleCollection",
            "description": null
          }
        }
      ],
      "examples": []
    },
    {
      "name": "insertFileFromBase64",
      "kind": "create",
      "description": "Inserts a document into the target document at a specific location with additional properties. Headers, footers, watermarks, and other section properties are copied by default.",
      "signatures": [
        {
          "params": [
            {
              "name": "base64File",
              "type": "string",
              "required": true,
              "description": "The Base64-encoded content of a .docx file."
            },
            {
              "name": "insertLocation",
              "type": "Word.InsertLocation.replace | Word.InsertLocation.start | Word.InsertLocation.end | \"Replace\" | \"Start\" | \"End\"",
              "required": true,
              "description": "The value must be 'Replace', 'Start', or 'End'."
            },
            {
              "name": "insertFileOptions",
              "type": "Word.InsertFileOptions",
              "required": false,
              "description": "The additional properties that should be imported to the destination document."
            }
          ],
          "returns": {
            "type": "Word.SectionCollection",
            "description": null
          }
        }
      ],
      "examples": []
    },
    {
      "name": "load",
      "kind": "load",
      "description": "Queues up a command to load the specified properties of the object. You must call context.sync() before reading the properties.",
      "signatures": [
        {
          "params": [
            {
              "name": "options",
              "type": "Word.Interfaces.DocumentCreatedLoadOptions",
              "required": false,
              "description": "Provides options for which properties of the object to load."
            }
          ],
          "returns": {
            "type": "Word.DocumentCreated",
            "description": null
          }
        },
        {
          "params": [
            {
              "name": "propertyNames",
              "type": "string | string[]",
              "required": false,
              "description": "A comma-delimited string or an array of strings that specify the properties to load."
            }
          ],
          "returns": {
            "type": "Word.DocumentCreated",
            "description": null
          }
        },
        {
          "params": [
            {
              "name": "propertyNamesAndPaths",
              "type": "{ select?: string; expand?: string; }",
              "required": false,
              "description": "propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load."
            }
          ],
          "returns": {
            "type": "Word.DocumentCreated",
            "description": null
          }
        }
      ],
      "examples": []
    },
    {
      "name": "open",
      "kind": null,
      "description": "Opens the document.",
      "signatures": [
        {
          "params": [],
          "returns": {
            "type": "void",
            "description": null
          }
        }
      ],
      "examples": [
        {
          "description": null,
          "usage_code": "// Create and open a new document in a new tab or window.\nawait Word.run(async (context) => {\n  const externalDoc = context.application.createDocument();\n  await context.sync();\n\n  externalDoc.open();\n  await context.sync();\n});",
          "output_code": null
        }
      ]
    },
    {
      "name": "save",
      "kind": null,
      "description": "Saves the document.",
      "signatures": [
        {
          "params": [
            {
              "name": "saveBehavior",
              "type": "Word.SaveBehavior",
              "required": false,
              "description": "DocumentCreated only supports 'Save'."
            },
            {
              "name": "fileName",
              "type": "string",
              "required": false,
              "description": "The file name (exclude file extension). Only takes effect for a new document."
            }
          ],
          "returns": {
            "type": "void",
            "description": null
          }
        },
        {
          "params": [
            {
              "name": "saveBehavior",
              "type": "\"Save\" | \"Prompt\"",
              "required": false,
              "description": "DocumentCreated only supports 'Save'."
            },
            {
              "name": "fileName",
              "type": "string",
              "required": false,
              "description": "The file name (exclude file extension). Only takes effect for a new document."
            }
          ],
          "returns": {
            "type": "void",
            "description": null
          }
        }
      ],
      "examples": []
    },
    {
      "name": "set",
      "kind": "configure",
      "description": "Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate properties, or another API object of the same type.",
      "signatures": [
        {
          "params": [
            {
              "name": "properties",
              "type": "Interfaces.DocumentCreatedUpdateData",
              "required": true,
              "description": "A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called."
            },
            {
              "name": "options",
              "type": "OfficeExtension.UpdateOptions",
              "required": false,
              "description": "Provides an option to suppress errors if the properties object tries to set any read-only properties."
            }
          ],
          "returns": {
            "type": "void",
            "description": null
          }
        },
        {
          "params": [
            {
              "name": "properties",
              "type": "Word.DocumentCreated",
              "required": true,
              "description": null
            }
          ],
          "returns": {
            "type": "void",
            "description": null
          }
        }
      ],
      "examples": []
    },
    {
      "name": "toJSON",
      "kind": "serialize",
      "description": "Overrides the JavaScript toJSON() method in order to provide more useful output when an API object is passed to JSON.stringify(). (JSON.stringify, in turn, calls the toJSON method of the object that's passed to it.) Whereas the original Word.DocumentCreated object is an API object, the toJSON method returns a plain JavaScript object (typed as Word.Interfaces.DocumentCreatedData) that contains shallow copies of any loaded child properties from the original object.",
      "signatures": [
        {
          "params": [],
          "returns": {
            "type": "Word.Interfaces.DocumentCreatedData",
            "description": null
          }
        }
      ],
      "examples": []
    },
    {
      "name": "track",
      "kind": "track",
      "description": "Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for [context.trackedObjects.add(thisObject)](/en-us/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member). If you're using this object across .sync calls and outside the sequential execution of a \".run\" batch, and get an \"InvalidObjectPath\" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.",
      "signatures": [
        {
          "params": [],
          "returns": {
            "type": "Word.DocumentCreated",
            "description": null
          }
        }
      ],
      "examples": []
    },
    {
      "name": "untrack",
      "kind": "untrack",
      "description": "Release the memory associated with this object, if it has previously been tracked. This call is shorthand for [context.trackedObjects.remove(thisObject)](/en-us/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member). Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call context.sync() before the memory release takes effect.",
      "signatures": [
        {
          "params": [],
          "returns": {
            "type": "Word.DocumentCreated",
            "description": null
          }
        }
      ],
      "examples": []
    }
  ],
  "source": {
    "urls": [
      "https://docs.microsoft.com/en-us/javascript/api/word",
      "https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/50-document/insert-external-document.yaml"
    ]
  }
}