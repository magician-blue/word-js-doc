{
  "class": {
    "name": "Word.CommentReply",
    "package": "word",
    "extends": [
      "OfficeExtension.ClientObject"
    ],
    "api_set": {
      "name": "WordApi 1.4",
      "status": null
    },
    "description": "Represents a comment reply in the document.",
    "examples": [
      {
        "description": "Replies to the first active comment in the selected content.",
        "usage_code": "// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/50-document/manage-comments.yaml\n\n// Replies to the first active comment in the selected content.\nawait Word.run(async (context) => {\n  const text = (document.getElementById(\"reply-text\") as HTMLInputElement).value;\n  const comments: Word.CommentCollection = context.document.getSelection().getComments();\n  comments.load(\"items\");\n  await context.sync();\n\n  const firstActiveComment: Word.Comment = comments.items.find((item) => item.resolved !== true);\n  if (firstActiveComment) {\n    const reply: Word.CommentReply = firstActiveComment.reply(text);\n    console.log(\"Reply added.\");\n  } else {\n    console.warn(\"No active comment was found in the selection, so couldn't reply.\");\n  }\n});",
        "output_code": null
      }
    ]
  },
  "properties": [
    {
      "name": "authorEmail",
      "type": "string",
      "description": "Gets the email of the comment reply's author.",
      "since": "WordApi 1.4",
      "examples": []
    },
    {
      "name": "authorName",
      "type": "string",
      "description": "Gets the name of the comment reply's author.",
      "since": "WordApi 1.4",
      "examples": []
    },
    {
      "name": "content",
      "type": "string",
      "description": "Specifies the comment reply's content. The string is plain text.",
      "since": "WordApi 1.4",
      "examples": []
    },
    {
      "name": "contentRange",
      "type": "Word.CommentContentRange",
      "description": "Specifies the commentReply's content range.",
      "since": "WordApi 1.4",
      "examples": []
    },
    {
      "name": "context",
      "type": "RequestContext",
      "description": "The request context associated with the object. This connects the add-in's process to the Office host application's process.",
      "since": null,
      "examples": []
    },
    {
      "name": "creationDate",
      "type": "Date",
      "description": "Gets the creation date of the comment reply.",
      "since": "WordApi 1.4",
      "examples": []
    },
    {
      "name": "id",
      "type": "string",
      "description": "Gets the ID of the comment reply.",
      "since": "WordApi 1.4",
      "examples": []
    },
    {
      "name": "parentComment",
      "type": "Word.Comment",
      "description": "Gets the parent comment of this reply.",
      "since": "WordApi 1.4",
      "examples": []
    }
  ],
  "methods": [
    {
      "name": "delete",
      "kind": "delete",
      "description": "Deletes the comment reply.",
      "signatures": [
        {
          "params": [],
          "returns": {
            "type": "void",
            "description": null
          }
        }
      ],
      "examples": []
    },
    {
      "name": "load",
      "kind": "load",
      "description": "Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.",
      "signatures": [
        {
          "params": [
            {
              "name": "options",
              "type": "Word.Interfaces.CommentReplyLoadOptions",
              "required": false,
              "description": "Provides options for which properties of the object to load."
            }
          ],
          "returns": {
            "type": "Word.CommentReply",
            "description": null
          }
        },
        {
          "params": [
            {
              "name": "propertyNames",
              "type": "string | string[]",
              "required": false,
              "description": "A comma-delimited string or an array of strings that specify the properties to load."
            }
          ],
          "returns": {
            "type": "Word.CommentReply",
            "description": null
          }
        },
        {
          "params": [
            {
              "name": "propertyNamesAndPaths",
              "type": "{ select?: string; expand?: string; }",
              "required": false,
              "description": "`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load."
            }
          ],
          "returns": {
            "type": "Word.CommentReply",
            "description": null
          }
        }
      ],
      "examples": []
    },
    {
      "name": "set",
      "kind": "write",
      "description": "Sets multiple properties of an object at the same time.",
      "signatures": [
        {
          "params": [
            {
              "name": "properties",
              "type": "Interfaces.CommentReplyUpdateData",
              "required": true,
              "description": "A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called."
            },
            {
              "name": "options",
              "type": "OfficeExtension.UpdateOptions",
              "required": false,
              "description": "Provides an option to suppress errors if the properties object tries to set any read-only properties."
            }
          ],
          "returns": {
            "type": "void",
            "description": null
          }
        },
        {
          "params": [
            {
              "name": "properties",
              "type": "Word.CommentReply",
              "required": true,
              "description": null
            }
          ],
          "returns": {
            "type": "void",
            "description": null
          }
        }
      ],
      "examples": []
    },
    {
      "name": "toJSON",
      "kind": "serialize",
      "description": "Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`. (`JSON.stringify`, in turn, calls the `toJSON` method of the object that's passed to it.) Whereas the original `Word.CommentReply` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.CommentReplyData`) that contains shallow copies of any loaded child properties from the original object.",
      "signatures": [
        {
          "params": [],
          "returns": {
            "type": "Word.Interfaces.CommentReplyData",
            "description": null
          }
        }
      ],
      "examples": []
    },
    {
      "name": "track",
      "kind": "track",
      "description": "Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand for context.trackedObjects.add(thisObject). If you're using this object across `.sync` calls and outside the sequential execution of a \".run\" batch, and get an \"InvalidObjectPath\" error when setting a property or invoking a method on the object, you need to add the object to the tracked object collection when the object was first created. If this object is part of a collection, you should also track the parent collection.",
      "signatures": [
        {
          "params": [],
          "returns": {
            "type": "Word.CommentReply",
            "description": null
          }
        }
      ],
      "examples": []
    },
    {
      "name": "untrack",
      "kind": "untrack",
      "description": "Release the memory associated with this object, if it has previously been tracked. This call is shorthand for context.trackedObjects.remove(thisObject). Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them. You'll need to call `context.sync()` before the memory release takes effect.",
      "signatures": [
        {
          "params": [],
          "returns": {
            "type": "Word.CommentReply",
            "description": null
          }
        }
      ],
      "examples": []
    }
  ],
  "source": {
    "urls": [
      "https://learn.microsoft.com/en-us/javascript/api/word"
    ]
  }
}